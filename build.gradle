plugins {
    id 'maven'
    id 'java'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'net.researchgate.release' version '2.7.0'
    id 'eclipse'
}

description = """Testing framework for mainframe applications using X3270 / S3270 for automating the input on a IBM 3270 terminal emulator for the X Window System and Windows see http://x3270.bgp.nu/"""

repositories {
    jcenter()
    mavenCentral() // This is very important for JUnit 5 tests to execute see https://www.petrikainulainen.net/programming/testing/junit-5-tutorial-running-unit-tests-with-gradle/
    maven { url "http://dl.bintray.com/test-editor/Fixtures/" }
    maven { url "http://dl.bintray.com/test-editor/maven/" }
    
}

group = 'org.testeditor.fixture.host'

sourceCompatibility = 1.10
targetCompatibility = 1.10

// show standard out during test to see logging output
test {
    // enable JUnit 5 support
    useJUnitPlatform()
    // show standard out during test to see logging output
    testLogging.showStandardStreams = true
}


dependencies {
    compile 'org.testeditor.fixture:core-fixture:4.2.+'
    compile 'com.mashape.unirest:unirest-java:1.4.9'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.google.guava:guava:21.0'

    // Testing now with JUnit5
    testCompileOnly 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0' //For tests that needs JUnit 4.X
    testCompile 'org.mockito:mockito-core:2.23.0'

    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.github.tomakehurst:wiremock:2.6.0'
    testCompile 'com.google.truth:truth:0.31'
    testCompile 'commons-codec:commons-codec:1.10'
    testCompile 'org.apache.commons:commons-lang3:3.6'

}
    
sourceSets.main.resources.srcDirs = [ "src/main/java" ]
sourceSets.main.resources.includes = [ "**/*.aml" ]    
 
jar {
    manifest {
        attributes 'Implementation-Title': "${project.group}.${project.name}",
                   'Implementation-Version': project.version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.packaging = 'jar'
    }
}

release {
    preTagCommitMessage = '[release]'
    tagCommitMessage = '[release]'
    newVersionCommitMessage = '[release] new version'
    tagTemplate = 'v${version}'
}

// For a summary of failed tests at the end of test execution.
tasks.withType(Test) {
    // a collection to track failedTests
    ext.failedTests = []
     afterTest { descriptor, result ->
        if (result.resultType == TestResult.ResultType.FAILURE) {
            String failedTest = "${descriptor.className}::${descriptor.name}"
            logger.debug("Adding " + failedTest + " to failedTests...")
            failedTests << [failedTest]
        }
    }
     afterSuite { suite, result ->
        if (!suite.parent) { // will match the outermost suite
            // logs each failed test
            if (!failedTests.empty) {
                logger.lifecycle("\n\n*************************************************************************************************")
                logger.lifecycle("\nFailed tests:")
                failedTests.each { failedTest ->
                    logger.lifecycle("${failedTest}")
                }
            }
            logger.lifecycle("\n*************************************************************************************************\n")
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'Fixtures'
        name = project.name
        userOrg = 'test-editor'
        licenses = ['EPL-1.0']
        vcsUrl = "https://github.com/test-editor/${project.name}.git"
        version {
            name = project.version
            vcsTag = "v$project.version"
        }
        websiteUrl = 'http://testeditor.org'
    }
}
